---
title: "Guide d'identification de biodiversit√© du Qu√©bec - Partie 1 : les cartes"
description: "Est-ce que les donn√©es de biodiversit√© issues de la science citoyenne permettraient l'√©laboration d'un guide d'identification des esp√®ces fr√©quemment observ√©es?"
bibliography: ../../posts/ref_blg.bib
csl: ../../posts/evolution.csl
# date: "2025-05-24"
date: "2025-10-24"
categories: ["guide", "biodiversit√©", "analyse", "code", "donn√©es", "cartes"]
image: "https://marcolivierbeausoleil.wordpress.com/wp-content/uploads/2015/07/cropped-imgp81461.jpg"
author:
  - name: Marc-Olivier Beausoleil
citation: 
  # doi: "10.xxxxx/test"
  url: https://evologie.netlify.app
  language: fr
# number-sections: true
execute: 
  message: false
  warning: false
  # cache: true
editor_options: 
  chunk_output_type: console
---

<!-- IMPORTANT -->

<!-- NOTE ../../posts/ref_blg.bib should be ../ref_blg.bib in final product-->

<!-- NOTE ../../postsevolution.csl should be ../evolution.csl in final product-->

## Six milliards de solitudes, √ßa fait beaucoup

Les chiffres en lien avec la biodiversit√© (appel√© aussi diversit√© biologique ou ¬´¬†biodiv¬†¬ª pour les intimes) sont stup√©fiants. Voici quelques statistiques. Le site web <a href='https://www.checklistbank.org' target='_blank'>ChecklistBank</a>, une r√©f√©rence qui catalogue l'ensemble des esp√®ces connues, r√©pertorie plus de 2.2¬†millions d'organismes sur la terre. Mais il en existe beaucoup plus. Les estimations du nombre d'esp√®ces sur la terre sont tr√®s larges : allant de quelques millions √† plusieurs milliards. Un article propose m√™me un potentiel de six milliards (ü§Ø), tout en excluant les virus [@larsenInordinateFondnessMultiplied2017].

<!-- Et l'ensemble des populations capables de former une descendance viable forment une esp√®ces biologique. -->

On parle bien d'esp√®ce : rappelons que la biodiversit√© n'est pas que le nombre d'esp√®ces, mais aussi tous les individus au sein des populations ainsi que leur environnement.

La <a href='https://www.cbd.int/convention/articles?a=cbd-02' target='_blank'>Convention sur la diversit√© biologique (CDB)</a> d√©finit la biodiversit√© comme suit :

> Variabilit√© des organismes vivants de toute origine y compris, entre autres, les √©cosyst√®mes terrestres, marins et autres √©cosyst√®mes aquatiques et les complexes √©cologiques dont ils font partie; cela comprend la diversit√© au sein des esp√®ces et entre esp√®ces ainsi que celle des √©cosyst√®mes.

Mais qu'est-ce que cela veut dire? Une mani√®re d'interpr√©ter cette d√©finition est par la lentille de l'√©volution, et en particulier, le processus de la s√©lection naturelle. La variabilit√© des organismes que nous voyons est intimement li√©e avec l'environnement : ce sont les conditions de l'environnement qui favorisent ou d√©favorisent certains individus (et leur g√©n√©tique) √† un moment donn√©. Et les individus modifient leur environnement √† leur tour pour faciliter leur transmission g√©n√©tique (fabrication d'un nid, d'un barrage pour les castors, les fleurs pour favoriser la pollinisation, etc.).

## Voyager avec son bagage g√©n√©tique

Chaque individu transporte son propre bagage g√©n√©tique et voyage √† travers le paysage. Et oui, cela veut dire que vous √™tes en quelque sorte, le v√©hicule de voyage de votre bagage g√©n√©tique. Ensemble, vous faites un voyage √† travers le paysage et les g√©n√©rations! Les diff√©rences g√©n√©tiques entre tous les individus constituent la vari√©t√© de la vie.

Et cela n'est pas anodin : car sans variation, l'√©volution n'est pas possible. Autrement dit, l'√©volution se produit sur les populations.

La collection d'individus et leur code g√©n√©tique diff√©rent contribuent √† un bassin g√©n√©tique pour un habitat quelconque. <!-- , puisqu'ils sont tous g√©n√©tiquement diff√©rents les uns des autres  --> C'est donc dans ce bassin de g√®ne que les individus sont s√©lectionn√©s naturellement en fonction des conditions de l'environnement. Cela d√©termine quel ensemble de bagage g√©n√©tique pourra se r√©pandre dans la prochaine g√©n√©ration. <!-- √Ä quel point l'environnement est exigeant pour les organismes s√©lection naturelle est d'observer des changements g√©n√©tiques aux niveaux des populations.  -->

Rappelons donc que la biodiversit√© est en changement constament. Les processus √©volutifs peuvent le garantir. Il existe donc des conditions environnementales qui peuvent favoriser ou emp√™cher l'√©mergence de biodiversit√©. Certains moments de l'histoire de la vie montrent effectivement que la biodiversit√© augmente et diminue √† des taux diff√©rents [@alroyPhanerozoicTrendsGlobal2008].

<!-- De ce nombre, X sont des insectes. Comme le disait le scientifique Robert M. May [-@mayBiologicalDiversityHow1986] : -->

<!-- > Le nombre total d'esp√®ces effectivement nomm√©es et catalogu√©es est d'un peu plus d'un million. La plupart d'entre elles sont des insectes. En effet, √† une bonne approximation, toutes les esp√®ces sont des insectes ![^1] -->

<!-- [^1]: Citation originale *The total number of species actually named and catalogued is just over one million. Most of these are insects. Indeed, to a good approximation, all species are insects!* -->

<!-- (imaginez le d√©fis collosal si on incluait les esp√®ces fossiles ou √©teintes ü¶§!) -->

## Les bassins g√©n√©tiques s'√©rodent...

Par contre, plusieurs experts sont inquiets : alors que les scientifiques n'ont m√™me pas acc√®s √† un portrait complet des esp√®ces vivantes actuellement sur la terre, nous en perdons √† un rythme jamais enregistr√© de l'histoire de l'humanit√©.

Le rapport de la *Plateforme intergouvernementale scientifique et politique sur la biodiversit√© et les services √©cosyst√©miques* (IPBES), collig√© par un groupe international d'experts sur la biodiversit√©, rapporte qu'environ 1 million d'esp√®ces animales et v√©g√©tales sont actuellement menac√©es d'extinction [@ipbesResumeDecideurs2016]. Au Canada, depuis les ann√©es 1970, la taille de certaines populations animales a chut√© de 62% et plus de la moiti√© des 910 esp√®ces √©tudi√©es ont d√©clin√© en abondance [@wwf-canadaRapportPlaneteVivante2025]. Le *Rapport Plan√®te vivante Canada 2025* est clair [-@wwf-canada2025] :

> Le constat est qu'il y a des d√©clins persistants des populations d'esp√®ces suivies depuis plus d'un demi-si√®cle.

La perte de biodiversit√© est un enjeu majeur de notre √©poque. Comme le rappel le rapport du Cadre mondial de la biodiversit√© de Kunming-Montr√©al [@conventiondivbioCBM2022] :

> La biodiversit√© est essentielle au bien-√™tre humain, √† la sant√© de la plan√®te et √† la prosp√©rit√© √©conomique de tous les peuples, notamment √† la r√©alisation de modes de vie √©quilibr√©s et en harmonie avec la Terre nourrici√®re.

En d'autres mots, nous ne pouvons pas nous passer le la biodiversit√©. Et sa perte est li√©e √† la n√¥tre. Il semble donc imp√©ratif d'en apprendre plus sur ces vivants, petits et grands.

<!-- Une des missions de [Biodiversit√© Qu√©bec](https://biodiversite-quebec.ca/fr/a_propos) est l'agr√©gation de donn√©es de biodiversit√©s de plusieurs sources dont le Syst√®me mondial d‚Äôinformation sur la biodiversit√© <a href='https://www.gbif.org' target='_blank'>GBIF (Global Biodiversity Information Facility)</a>, le Minist√®re des For√™ts, de la Faune et des Parcs, le Regroupement Qu√©becOiseaux, le Service canadien de la faune et bien d'autres.  En plus, Biodiversit√© Qu√©bec donne [acc√®s aux donn√©es publiques de l'Atlas](https://biodiversite-quebec.ca/fr/documentation/acces-atlas) en langage de programmation R. -->

## Guide d'identification motiv√© par les donn√©es citoyennes

Alors qu'est-ce qui pourrait aider pour en apprendre plus sur nos voisins et cousins animaux, plantes, champignons avec qui nous partageons l'environnement?

O√π d√©buter en tant que naturalistes en herbe? <!-- et aider des scientifiques √† faire des √©tudes en conservation.  --> Les guides d'identification contiennent une source importante d'information sur la biodiversit√©. Par contre, pour un d√©butant qui n'est pas accompagn√© d'un sp√©cialiste, on peut rapidement √™tre submerg√© par toutes les esp√®ces et les nuances entre diff√©rentes formes d'une m√™me esp√®ce. En plus, les livres d'identification sont souvent plut√¥t lourds √† apporter dans un sac. Mais ne pas avoir de guide n'est pas une option si notre but est de conna√Ætre les organismes que nous pourrions rencontr√©s pour une r√©gion donn√©e.

Un juste milieu entre un guide complet et ne pas avoir de r√©f√©rence serait les petits d√©pliants avec les esp√®ces locales les plus probable d'√™tre observ√©es. Ce d√©pliant est aussi un bon point de d√©part pour parler de diversit√© lors de sorties sur le terrain avec un groupe de personnes, dont des enfants, ou pour montrer √† des visiteurs curieux ce que nous observons. <!-- C'est une mani√®re de compararer les organismes et leurs liens √©cologiques, etc. Bref, c'est une sorte de pr√©sentation PowerPoint de biodiversit√© qui vous suit. -->

Serait-il possible de faire un court guide avec des esp√®ces souvent observ√©es pour le Qu√©bec? Est-ce possible d'utiliser les donn√©es de pr√©sence d'esp√®ces pour faire un d√©pliant de biodiversit√©? Comme inspiration, la collection de <a href='https://www.broquet.ca/collection/guide-eclair/' target='_blank'>Guides √©clair (Broquet)</a> sur le th√®me de la nature ou les guides de <a href='https://www.waterfordpress.com' target='_blank'>Waterford Press</a> sont le genre de d√©pliant qui pourrait √™tre fait avec les donn√©es de science citoyenne (comme <a href='https://www.inaturalist.org' target='_blank'>iNaturalist</a>). Certains d√©pliants ajoutent de l'information comme des cartes avec les points d'endroits int√©ressants pour aller faire des observations en nature.

OK, faisons un plan.

<!-- Pour les oiseaux, des guides montrent les esp√®ces les plus fr√©quemment observ√©es dans diff√©rents groupes taxonomiques : 1. la sauvagine et les oiseaux de rivage (environ entre 45 et 60 esp√®ces; pour ceux-ci, les femelles canards sont souvent montr√©es), 2. le gibier (2-4 esp√®ces), 3. les colombes, pics, martin-p√™cheurs, colibris, martinets, etc. (11-12 esp√®ces), 4. les oiseaux de proie (12-13 esp√®ces), 5. Les oiseaux percheurs (45-54). -->

### Objectifs du projet

Donc voici un r√©sumer des objectifs de notre projet :

1.  **Cartographie** : faire une carte avec les MRC du Qu√©bec et les domaines biologiques du Qu√©bec;
2.  **Points chauds de biodiversit√©** : obtenir des sites ornithologiques int√©ressants (beaucoup d'observations) √† utiliser comme proxy d'endroit int√©ressant pour aller observer la biodiversit√©;
3.  **Liste d'esp√®ces (pr√©sence d'esp√®ces)** : faire une liste d'esp√®ces (nom fran√ßais et latin) souvent vues par la science citoyenne pour une r√©gion d'int√©r√™t;
4.  (Optionnel) **Liste de traits** : Faire une liste de tailles (longueur, envergure, poids) pour ajouter cette information en description. Selon le design du d√©pliant, nous pourrions ajouter des informations comme des trucs mn√©motechniques pour les oiseaux chanteurs.
5.  (Optionnel) **Portrait photo des organismes** : Ajouter des photos d'organismes dans le d√©pliant.

La premi√®re partie de cette s√©rie commence par la cartographie puisque nous allons avoir besoin de manipuler de l'information spatiale plus tard lorsque nous allons travailler avec des donn√©es de biodiversit√©. Ce billet montre comment utiliser des progiciels R pour faire des analyses spatiales. J'assume ici une familiarit√© avec le langage R [@R-base]. Si vous cherchez comment d√©buter en R, je recommande les <a href='https://r.qcbs.ca/fr/workshops/' target='_blank'>ateliers R du Centre de la science de la biodiversit√© du Qu√©bec</a>.

### Reproduire les analyses

Si vous voulez reproduire les analyses ou suivre le code en m√™me temps, l'ensemble des donn√©es de ce projet sont disponible sur le site [de l'Open Science Framework (OSF) : Guide d‚Äôidentification de biodiversit√© du Qu√©bec](https://osf.io/92zv4/overview?view_only=528c78edcd814d10a7204e72fdde8490) [@MOBGuideIDBiodiv2025]. N'h√©sitez pas √† vous pratiquer! Notez que les progiciels et donn√©es ont leur r√©f√©rence dans le fichier `ref_blg.bib` et sont cit√©s √† la fin de ce billet.

L'environnement de travail a √©t√© captur√© avec le progiciel `renv`, ce qui permet d'avoir les m√™mes versions de progiciels R pour ce tutoriel. Des explications sont fournies plus bas <!-- (voir @sec-prepenv) --> pour restaurer l'environnement de travail.

## Recherche de donn√©es

Pour r√©aliser le projet, nous devons trouver des jeux de donn√©es pertinents pour faire une carte et mettre des observations de biodiversit√©. Beaucoup de jeux de donn√©es, surtout pour de l'information cartographique administrative ou d√©crivant le territoire, sont disponibles sur [Donn√©es Qu√©bec (DQC)](https://www.donneesquebec.ca). Pour la biodiversit√©, le [Global Biodiversity Information Facility (GBIF) ou Syst√®me mondial d'information sur la biodiversit√© (SMIB)](https://www.gbif.org) est *la* source de donn√©es la plus reconnue, en particulier pour les donn√©es de pr√©sence d'esp√®ces Les acronymes (DQC, GBIF, etc.) seront utilis√©s √† c√¥t√© d'un jeu de donn√©es pour conna√Ætre leur source rapidement.

### Donn√©es administratives et fond de carte

Voici les jeux de donn√©es requis pour faire notre carte de base :

-   **R√©gions administratives** : [D√©coupages administratifs (DQC)](https://www.donneesquebec.ca/recherche/dataset/decoupages-administratifs/resource/b368d470-71d6-40a2-8457-e4419de2f9c0) [@MRNFDecAdmin2018] et celles du site [Statistique Canada](https://www12.statcan.gc.ca/census-recensement/2021/geo/sip-pis/boundary-limites/index2021-fra.cfm?year=21) pour les limites du recensement du Canada (voir *Recensement de 2021 - Fichiers des limites* [@statistiquecanadaRecensement2021Fichier2025]);
-   **Hydrologie** : [G√©obase du r√©seau hydrographique du Qu√©bec (GRHQ; DQC)](https://www.donneesquebec.ca/recherche/fr/dataset/grhq) [@MRNFGeobaseResHydro2019];
-   R√©f√©rence √©cologique du Qu√©bec avec information sur les biomes : [Classification √©cologique du territoire qu√©b√©cois (DQC)](https://www.donneesquebec.ca/recherche/dataset/systeme-hierarchique-de-classification-ecologique-du-territoire/resource/b336d842-9f1d-4d0e-88c1-d771d8ade785) [@MRNFClassEcoTerritoire2016];
-   **Villes et toponymie** : Quelques donn√©es provenant du [portail de donn√©es des portraits climatiques d'Ouranos](https://portraits.ouranos.ca/fr/spatial?a=0&c=0&discrete=1&e=CMIP6&fro=1&i=tg_mean&mun=0&p=50&r=qc000&s=annual&scen=ssp370&w=0&yr=2071) pour le nom des villes et la population de celles-ci [@ouranosPlaces2024]. Par contre, la *Base de donn√©es toponymiques du Canada (BDTC)* pourrait √™tre utilis√© pour le Canada et s√©lectionner pas seulement les villes, mais les parcs ou autres entit√©es ayant un toponyme [@GouvCanRessNatCan2025]. Ce dernier jeu de donn√©es contient des r√®gles d'affiche des √©tiquettes de toponymie selon l'√©chelle si cela vous int√©resse.

### Donn√©es de biodiversit√©

Pour les donn√©es de biodiversit√©, il existe aussi plusieurs sources. D'abord, il y a le [Global Biodiversity Information Facility (GBIF)](https://www.gbif.org) qui contient en date d'octobre 2025, plus de 43¬†millions de donn√©es de pr√©sences d'individus pour le Qu√©bec (vous pouvez aller voir cette information directement sur le [site web GBIF avec le filtre de r√©gion](https://www.gbif.org/occurrence/search?occurrence_status=present&gadm_gid=CAN.11_1)). Les donn√©es de biodiversit√© du Qu√©bec serons explor√©es dans la deuxi√®me partie de cette s√©rie.

-   **Points d'observations eBird** : voir la [documentation ici](https://support.ebird.org/en/support/solutions/articles/48001009443-ebird-hotspot-faqs#anchorAllHotspots) pour acc√©der aux donn√©es. J'en reparlerai plus tard dans le billet;
-   **Donn√©es de pr√©sence d'esp√®ces** : [GBIF](https://www.gbif.org) qui peuvent √™tre accessible directement sur le site web ou avec le [progiciel rgbif](https://docs.ropensci.org/rgbif/index.html) [@R-rgbif].

Aussi, il pourrait √™tre int√©ressant d'avoir des informations sur la taille des organismes et autres traits morphologiques. Au lieu d'aller chercher ces valeurs individuellement, des bases de donn√©es sont d√©j√† disponibles dont pour les oiseaux [@tobiasAVONETMorphologicalEcological2022] et plus g√©n√©ralement pour les mammif√®res et les reptiles [@myhrvoldAmnioteLifehistoryDatabase2015].

-   **Traits des esp√®ces** (optionel) : [AVONET pour les oiseaux](https://figshare.com/s/b990722d72a26b5bfead) [@tobiasAVONETMorphologicalEcological2022] ou une [base de donn√©es des oiseaux, mammif√®res et reptiles](https://www.esapubs.org/archive/ecol/E096/269/) [@myhrvoldAmnioteLifehistoryDatabase2015].

Finalement, des portails de science citoyenne, comme <a href='https://inaturalist.ca' target='_blank'>iNaturalist</a>, permettent d'enregistrer des observations de la nature. Un des fondements de cette plateforme est d'avoir des preuves (photos ou enregistrements audios) d'observation que la communaut√© peut identifier. Nous pourrions donc extraire des photos et finaliser notre projet de d√©pliant.

-   **Photos des esp√®ces** (optionel) : <a href='https://inaturalist.ca' target='_blank'>iNaturalist</a> avec le [progiciel rinat](https://github.com/ropensci/rinat) [@R-rinat].

## Partie 1 ‚Äî La cartographie

Pour cette premi√®re partie, nous allons produire deux cartes pour le d√©pliant :

1.  une carte de l'ensemble du territoire du Qu√©bec pour avoir un contexte g√©n√©ral,
2.  puis une plus petite carte montrant les d√©tails de points importants de biodiversit√© pour une Montr√©al et Laval.

<!-- Notre plan de match est de pr√©parer notre session R pour avoir les progiciels et fonctions n√©cessaires pour faire tourner nos scripts. Ensuite, nous allons produire notre carte de fond et une carte avec des points d'observation de biodiversit√©. -->

<!-- √Ä noter ici que les scripts que vous voyez sont le r√©sultat de la recherche et non une explication de tout le d√©veloppement des scripts et toutes les r√©flexions. -->

## 0. Pr√©paration de l'environnement R {#sec-prepenv}

Tout d'abord, nous devons pr√©parer l'environnement de travail R.

```{r prep_path, echo=FALSE}
# Charge selon la position du chemin d'acc√®s 
# Si le nom du projet n'est pas dans le chemin d'acc√®s active, il sera chang√©
if (!grepl(pattern = '2025_05_24_Guide_biodiv_qc', x = getwd())) {
  # Source l'incubateur d'id√©es 
  source(file = '.InCubateur/2025_05_24_Guide_biodiv_qc/scripts/00_init/00_initialize.R')
} else {
  source(file = 'scripts/00_init/00_initialize.R')
}
```

```{r renv_prep, eval=FALSE, echo=FALSE}
# renv::init()   # cr√©ation de l'espace 
renv::snapshot() # Enregistre la session actuelle
renv::restore()  # Permet de restaurer la session avec les m√™mes versions
```

Un fichier `renv.lock` avec l'environnement de travail reproductible permet de pr√©parer votre session R en installant les progiciels utilis√©s avec les m√™mes versions pour ce tutoriel. Avec le progiciel `renv`, utilisez `renv::restore()` pour recr√©er cet espace.

```{r renv_install, eval=FALSE, echo=TRUE}
renv::restore()
```

J'ai plac√© les progiciels R et autres scripts √† appeler dans `00_initialize.R`.

```{r lire_prep_script, eval=FALSE}
# Lire le script de pr√©paration automatiquement
source(file = 'scripts/00_init/00_initialize.R')
```

Celui-ci chargera les progiciels (vous devez tout de m√™me installer les progiciels ou *libraires* avant!) et mettra en m√©moire des fonctions pour faire nos analyses. La structure du fichier ressemble √† cela :

```{r eval=FALSE}
# Description ------

# [...]

# Cr√©ation des dossiers ------
dir.create(...)

# Progiciels R ------
library(...)

# Charge les fonctions ------
source('abcdef.R')

# [...]

```

J'ai construit le script `00_initialize.R` √† mesure que je d√©veloppais le projet. C'est pratique puisque pour un nouveau script, je peux simplement l'appeler (avec `source()`) et toutes les fonctions n√©cessaires seront √† ma disposition.

Les principaux progiciels pour ce projet sont

-   ggplot2 pour faire des graphiques et des cartes [@ggplot22016; @R-ggplot2],
-   dplyr pour la manipulation de donn√©es [@R-dplyr],
-   sf pour l'analyse spatiale [@sf2023; @sf2018; @R-sf],
-   mapview pour faires cartes interactives simples [@R-mapview] et
-   rgbif [@R-rgbif] et rinat [@R-rinat] pour la manipulation de donn√©es de biodiversit√©.

Nous allons maintenant pr√©parer le terrain pour faire notre carte de base.

## 1. Cartographie

Lorsqu'on fait des cartes, un fond permet de contextualiser l'information avec des marqueurs spatiaux (d√©limitation d'une r√©gion administrative, lacs ou cours d'eau imporant, une ville, etc.). Aussi, les donn√©es du fond de la carte sont parfois pertinentes pour faire des manipulations spatiales. Par exemple, il arrive de recouper le territoire par des noms connus (r√©gions administratives), de faire un sommaire en fonction de r√©gions connues ou d'appliquer des filtres √† l'√©chelle d'une MRC.

### Carte : r√©gions administratives du Qu√©bec

Les d√©limitations des MRC du Qu√©bec est disponible sur Donn√©es Qu√©bec sous [D√©coupages administratifs (DQC)](https://www.donneesquebec.ca/recherche/dataset/decoupages-administratifs/resource/b368d470-71d6-40a2-8457-e4419de2f9c0). Le fichier qui nous int√©resse est `mrc_s.shp` : ce sont les polygones des MRC du Qu√©bec. L'original est un Shapefile. Mais je trouve cela plus √©l√©gant de mettre cela en g√©opackage (`.gpkg`), puisque tout se retrouve dans un seul fichier. De plus, les g√©opackages offrent plusieurs avantages par rapport √† d'autres types de fichiers comme les Shapefiles.x Le script `scripts/partie_1/Preparation_admin_region.R` montre comment.

```{r prep_donnees_adminreg, eval=FALSE}
# Fonctionne si vous t√©l√©chargez les jeux de donn√©es originaux localement. 
source(file = 'scripts/partie_1/Preparation_admin_region.R')
```

Le progiciel sf permet de lire des fichiers pour nos analyses spatiales [@R-sf; @sf2018; @sf2023].

```{r region_admin_qc, echo=TRUE, eval=TRUE}
# Charger le g√©opackage 
regqc = sf::st_read(
  # DSN : data source name
  dsn = "data/partie_1/admin_geo/admin_reg_qc/mrc_s.gpkg", 
  quiet = TRUE
) 
```

Regardons les premi√®res lignes du jeu de donn√©es :

```{r head_reg_qc}
regqc |> 
  dplyr::select(MRS_NM_MRC, 
                MRS_NM_REG) |> 
  head(n = 3)
```

Il serait int√©ressant de voir les donn√©es sur une carte rapidement. Le progiciel [`mapview`](https://r-spatial.github.io/mapview/) est utile pour faire une carte interactive et de colorier les MRC [@R-mapview].

```{r definir_tolerance, echo=TRUE}
# Tol√©rance des informations g√©ographiques pour une 
tolerance_cartes = 0
```

```{r variable_montre_carte_interactive, echo=FALSE}
intermap_slow = TRUE
```

```{r carte_interactive_qc_mrc, eval=TRUE}
# Simplification du polygone pour acc√©l√©rer l'ex√©cution des scripts.
regqc_simple = regqc |> 
  sf::st_simplify(dTolerance = tolerance_cartes)

# Faire une carte interactive.
mapview::mapview(
  x = regqc_simple, 
  zcol = 'MRS_NM_MRC', # Les couleurs repr√©sentent les MRCs
  legend = FALSE       # Ne pas ajouter de l√©gende 
) 
```

Maintenant, regardons les donn√©es cartographiques qui repr√©sente le territoire selon la nature de la v√©g√©tation.

### Carte : domaines bioclimatiques

Les donn√©es de la [Classification √©cologique du territoire qu√©b√©cois (DQC)](https://www.donneesquebec.ca/recherche/dataset/systeme-hierarchique-de-classification-ecologique-du-territoire/resource/b336d842-9f1d-4d0e-88c1-d771d8ade785) vont nous donner un fond √† mettre sur notre carte.

Je n'ai pas gard√© le fichier complet puisque les donn√©es sont assez tr√®s lourdes. Le script `scripts/partie_1/Preparation_eco_region.R` pr√©pare les donn√©es originales en un plus petit g√©opackage (`classification_eco.gpkg`) pour ce projet.

```{r prep_donnees_eco_reg, eval=FALSE}
# Fonctionne si vous t√©l√©chargez les jeux de donn√©es originaux localement. 
source(file = 'scripts/partie_1/Preparation_eco_region.R')
```

Les donn√©es simplifi√©es sont mises en m√©moire avec `st_read()`.

```{r donnees_class_Eco_gpkg}
cls_eco = st_read(
  dsn = "data/partie_1/ecologie/CLASSI_ECO_QC/classification_eco.gpkg", 
  layer = 'N3_DOM_BIO', 
  quiet = TRUE
)
```

Puis nous allons utiliser le syst√®me de coordonn√©es ou CRS (*coordinate reference system*) de la couche de domaines bioclimatiques comme r√©f√©rence pour toutes les couches de notre projet.

```{r donnees_class_Eco_CRS}
# Obtenir notre CRS chouchou et l'utiliser comme base pour faire la carte 
projetCRS = st_crs(x = cls_eco)

# Ce CRS est en fait le code EPSG 32198 qui est un syst√®me de coordonn√©es
# projet√©es 'Conique conforme de Lambert du Qu√©bec' NAD83
projetCRS == st_crs(x = 32198)

# Tester si le CRS est √©quivalent entre des couches 
st_crs(x = cls_eco) == st_crs(x = regqc)

# On transforme le CRS de la r√©gion du Qu√©bec 
regqc_t = st_transform(x = regqc, 
                       crs = projetCRS)
```

Vous pouvez aussi exporter un la repr√©sentation *Well-known Text* (WKT) du syst√®me CRS avec `st_as_text()` pour stocker l'information dans un fichier texte.

```{r ecriture_wkt, echo=TRUE, eval=FALSE}
# √âcrire le WKT maitre sur lequel on peut faire r√©f√©rence 
writeLines(
  # Extraire le WKT comme texte seulement 
  text = st_as_text(projetCRS), 
  # Fichier de sortie pour √©crire le texte (aussi appeler 'Connection') 
  con = "data/param_0/projetCRS.txt"
) 

# Lire le fichier CRS maitre  
projetCRS_read  = readLines(con = "data/param_0/projetCRS.txt")

# On peut directement utiliser ce CRS de la r√©gion du Qu√©bec 
regqc_t = st_transform(x = regqc, 
                       crs = projetCRS_read)
```

Nous pouvons superposer les cartes de r√©gion administrative avec la classification des domaines √©cologiques avec `mapview()`. Vous pouvez activer ou d√©sactiver les couches en passant votre curseur sur l'ic√¥ne des couches spatiales (sous les contr√¥les plus et moins pour zoomer dans la carte) et en appuyant sur le bouton √† bascule (bo√Æte √† cocher) les couches d√©sir√©es.

```{r carte_Classification_eco_superposition, eval=intermap_slow}
# Carte interactive avec 2 couches spatiales simplifi√©es
regqc_t_s = st_simplify(regqc_t, dTolerance = tolerance_cartes)
cls_eco_s = st_simplify(cls_eco, dTolerance = tolerance_cartes)

# R√©gions admin du QC
mapview(
  x = regqc_t_s, 
  zcol = 'MRS_NM_MRC', 
  layer.name = 'MRC du Qu√©bec',
  # Change la palette de couleur (voir les palettes ici `sort(hcl.pals())`)
  col.regions = hcl.colors(n = nrow(regqc_t_s), 
                           palette = "Spectral"),
  legend = FALSE
) +
  # Classification √âcologique
  mapview(
    x = cls_eco_s, 
    zcol = 'NOM_DB', 
    layer.name = 'Domaines biologiques'
  )
```

C'est pas super comme carte... mais nous pourrions faire une carte qui superpose les *bordures* des r√©gions administratives sur les domaines √©cologiques. C'est ce que nous allons faire avec une carte statique.

## Carte statiques

Le progiciel `ggplot2` [@ggplot22016; @R-ggplot2] a plusieurs fonctions pour ajouter des couches spatiales (par exemple `geom_sf`). Aussi, `ggplot()` ajoute les couches une par-dessus les autres : donc l'ordre dans lequel les couches sont plac√©es pour faire la carte est important.

Pour que les cartes s'affichent correctement, il faut mettre les couches spatiales dans le m√™me syst√®me de r√©f√©rence spatial ou CRS (*coordinate reference system*). Nous allons aussi utiliser `st_crs()` pour extraire le CRS d'une couche spatiale. Nous pouvons v√©rifier que nos couches spatiales sont dans le m√™me CRS si `st_crs(cls_eco_simp) == st_crs(regqc)` est `TRUE` (ce n'est pas le cas dans l'exemple qui suit).

```{r verification_CRS}
# V√©rification du CRS de couches spatiales (FALSE si diff√©rentes)
st_crs(x = cls_eco) == st_crs(x = regqc)    
# Ici on avait d√©j√† transform√© la couche regqc_t.
st_crs(x = cls_eco) == st_crs(x = regqc_t)  
```

Comme nous l'avons vu, la fonction `sf::st_transform()` nous permet de reprojeter une de nos couches spatiales avec le CRS d'une autre. Avant d'ex√©cuter cette fonction, nous allons aussi simplifier nos couches spatiales. Cela peut √™tre utile si on a des couches spatiales tr√®s d√©taill√©es qui pourraient ralentir `ggplot2`. La fonction `sf::st_simplify()` simplifie nos donn√©es spatiales et donc acc√©l√®re l'affichage des cartes. √Ä noter que la simplification n'est pas n√©cessaire √† faire pour toutes les cartes.

Voici comment simplifier les couches spatiales et rendre le CRS identique entre 2 couches :

```{r simplify_couches}
# Simplifier une forme pour faire le graphique 
cls_eco_simp = cls_eco |> 
  st_simplify(dTolerance = 1e3)

# Reprojection pour avoir le m√™me CRS 
regqc_simp = regqc |> 
  st_simplify(dTolerance = 1e3) |> 
  st_transform(crs = projetCRS)

# Ou en utilisation le CRS d'une couche directement 
# au lieu de l'objet 'projetCRS'
regqc_simp = regqc |> 
  st_simplify(dTolerance = 1e3) |> 
  st_transform(crs = st_crs(x = cls_eco))
```

Une fois les couches dans le m√™me syst√®me de r√©f√©rence, nous pouvons dessiner notre carte avec `ggplot()` et `geom_sf()`. Je place chaque couche cartographique dans son objet ce qui facilitera la construction de la carte finale. Cela permet aussi de r√©utiliser des couches entre les graphiques.

```{r ggplot_base}
# Faire le graphique de base ggplot 
gg_base = ggplot()
```

```{r ggplot_couches_carte_statique_qc}
# Couche de domaines bioclimatiques 
gg_cls_eco = geom_sf(
  data = cls_eco,               # Donn√©es 
  mapping = aes(fill = NOM_DB), # couleur selon les domaines biologiques
  alpha = 0.9,                  # Transparence √† 90% 
  linewidth = 0                 # Pas de ligne, plus beau! 
)                

# Couche des r√©gions administratives du Qu√©bec 
gg_reg_qc = geom_sf(
  data = regqc_simp,            # Donn√©es 
  fill = NA,                    # Pas de remplissage des polygones
  colour = 'grey100',           # Couleur des lignes
  linewidth = 0.05              # largeur fine pour les lignes
)
```

Puis on assemble les couches pour faire la carte.

```{r ggplot_carte_cls_eco_reg}
# Ajout des couches ggplot dans l'ordre voulue 
gg_qc_db = gg_base +
  # Ajout de la classification √©cologique
  gg_cls_eco + 
  # Ajout des r√©gions admin, par-dessus pour voir les bordures
  gg_reg_qc
```

Notez que la couche `gg_cls_eco` est dessin√©e en premier et `gg_reg_qc` apr√®s. Cela permet de voir les d√©limitations des r√©gions administratives par dessus les domaines bioclimatiques. Le graphique est dans l'objet `gg_qc_db`. Notez qu'on ajoute une palette de couleur et change le th√®me de base pour notre carte.

```{r carte_statique_qc_affiche}
# Afficher la carte 
gg_qc_db +          
  # Change le remplissage pour la palette viridis 
  scale_fill_viridis_d(
    # Ajout d'un titre √† la l√©gende 
    guide = guide_legend(title = 'Domaine biologique')
  ) +
  # Th√®me minimal 
  theme_void()
```

Super! Un fond de carte pas pire pour l'ensemble du Qu√©bec! Par contre, il manque quelque chose pour s'y retrouver : l'eau et des villes.

### Carte : hydrologie et villes

Notre carte de base manque de contexte. Plusieurs endroits aux Qu√©bec sont facilement reconnaissables par leur structure hydrologique, ce qui permettrait de mieux se situer sur la carte.

La G√©obase du r√©seau hydrographique du Qu√©bec (GRHQ) est un large ensemble de donn√©es de r√©f√©rence de l'hydrographie disponibles sur le site de [Donn√©es Qu√©bec (DQC)](https://www.donneesquebec.ca/recherche/fr/dataset/grhq). Nous allons seulement t√©l√©charger manuellement les donn√©es pour le sud du Qu√©bec (incluant les zones 00, 01, 02, 03, 04, 05, 06, 07_1, 07_2, 08, 14 de [l'index de t√©l√©chargement (DQC)](https://www.donneesquebec.ca/recherche/dataset/grhq/resource/4ef6703f-0ecb-46a0-bdb4-7074f00ff514)). Un script (`scripts/partie_1/Preparation_hydrologique.R`) permet de pr√©parer les donn√©es en g√©opackage (`data/partie_1/hydro/grhq_sud_qc.gpkg`) pour ce projet. Lors de la pr√©paration pour r√©duire la taille du fichier, j'ai appliqu√© un filtre pour garder les polygones de $1e6 m^2$ d'aire et plus.

```{r prep_donnees_grhq_prep, eval=FALSE}
# Fonctionne si vous t√©l√©chargez les jeux de donn√©es originaux localement. 
source(file = 'scripts/partie_1/Preparation_hydrologique.R')
```

Les donn√©es pr√©par√©es sont charg√©es et transform√©es avec le m√™me CRS du projet.

```{r charger_donnees_grhq_prep}
# Lire les donn√©es retravaill√©es du GRHQ
hq_filt_complete = st_read(
  dsn = 'data/partie_1/hydro/grhq_sud_qc.gpkg', 
  quiet = TRUE
) |> 
  st_transform(crs = projetCRS)
```

Aussi, nous pourrions inclure le nom de villes avec une grande population sur la carte ce qui serait super pour visualiser les donn√©es. Le site de [portraits climatiques d'Ouranos](https://portraits.ouranos.ca/fr/) a un fichier qui nous facilitera la t√¢che. Nous pouvons t√©l√©charger les donn√©es directement avec le lien. Nous allons ensuite extraire certaines villes pour afficher sur la carte.

Le scirpt `scripts/partie_1/Preparation_villes.R` pr√©pare un fichier g√©opackage (`data/partie_1/villes/villes_qc_ouranos.gpkg`) que nous pouvons charger directement. Le script importe un fichier `GeoJSON` disponible sur le site d'Ouranos directement √† partir d'un lien html (voir l'objet `lien_villes` dans le script de pr√©paration). La cr√©ation d'un g√©opackage pour ce projet permet de stocker ces donn√©es et d'y faire r√©f√©rence m√™me si le serveur Ouranos change ou devient inaccessible.

```{r prep_donnees_villes_prep, eval=FALSE}
# Fonctionne si vous t√©l√©chargez les jeux de donn√©es originaux localement. 
source(file = 'scripts/partie_1/Preparation_villes.R')
```

Nous pouvons charger notre g√©opackage et s√©lectionner des villes qui nous int√©resse pour mettre sur notre carte.

```{r villes_spatiales, echo=TRUE, eval=TRUE}
# Lecture du fichier des villes et populations du site d'Ouranos
villes_qc = st_read(
  dsn = 'data/partie_1/villes/villes_qc_ouranos.gpkg',
  quiet = TRUE)

# Afficher le nom des villes au besoin 
# sort(villes_qc$name)

# Vecteur avec le nom des villes 
villes_selection = c('Montr√©al', 'Qu√©bec', 
                     'Gatineau', 'Sherbrooke', 
                     'Saguenay', 'Trois-Rivi√®re', 
                     "Rouyn-Noranda", 
                     'Gasp√©', 'T√©miscaming', 
                     'Sept-√éles', 'Rimouski')

# Extraction du nom de villes √† ajouter sur la carte
villes_qc_lst_flt = villes_qc |> 
  filter(name %in% villes_selection)

```

J'ai remarqu√© q'une partie du r√©seau hydrique de la GRHQ d√©borde en Ontario. Il faut donc extraire ou filtrer les donn√©es qui se retrouvent seulement au Qu√©bec. Le site [Statistique Canada](https://www12.statcan.gc.ca/census-recensement/2021/geo/sip-pis/boundary-limites/index2021-fra.cfm?year=21) permet de t√©l√©charger les limites du recensement du Canada (voir *Recensement de 2021 - Fichiers des limites*). Le script `scripts/partie_1/Preparation_admin_region.R` pr√©pare les donn√©es dans un g√©opackage avec nom `can_lim.gpkg`.

```{r prep_Canada_bordure}
# Lire le fichier 
can_bord = st_read(
  dsn = "data/partie_1/admin_geo/admin_reg_can/can_lim.gpkg", 
  quiet = TRUE
)

# Extraire les limites du Qu√©bec et de l'Ontario 
qcont_bord = can_bord |> 
  # PRFNOM: Nom de la province ou du territoire, en fran√ßais.
  filter(PRFNOM %in% c("Qu√©bec", "Ontario")) |> 
  # Changer le CRS 
  st_transform(crs = projetCRS) 
```

Vu qu'une partie du r√©seau hydrique est en Ontario, on fait une intersection pour ¬´¬†couper¬†¬ª les g√©om√©tries selon la province (`st_intersection()`), puis on filtre pour ne garder que le nom de la province de notre choix (`filter()`).

```{r extraire_eau_qc}
# Extraction de l'hydrologie du Qu√©bec seulement
hq_filt_qc = hq_filt_complete |>
  # Intersection avec le fichier de l'Ontario et du Qu√©bec
  st_intersection(qcont_bord) |> 
  # Garder seulement ce qui se retrouve au Qu√©bec
  filter(PRFNOM == "Qu√©bec")
```

Avec cette couche filtr√©, nous allons cr√©er un objet `geom_sf()` qu'on ajoutera √† la carte.

```{r carte_complete, echo=TRUE, eval=TRUE}
gg_hq = geom_sf(
  data = hq_filt_qc, 
  linewidth = 0,
  fill = 'lightblue', # Couleur de l'eau 
  colour = 'lightblue'
)

# Ajout le point des villes 
gg_villes = geom_sf(
  data = villes_qc_lst_flt
)
```

Pour ne pas que les √©tiquettes des villes se chevauchent, nous allons utiliser une fonction (`geom_text_repel`) qui utilise des nombres al√©atoires. Pour une reproductibilit√© de la carte, un point de d√©part est choisi pour obtenir des nombres al√©atoires avec `set.seed()`. Ce point de d√©part (*seed*) est un nombre entier comme `12345` ou `247966138`.

```{r generateur_aleatoire_seed}
set.seed(seed = 12345)
```

Maintenant, nous avons les informations n√©cessaires pour faire une carte avec

1.  les domaines biologiques (`gg_cls_eco`),
2.  le r√©seau hydrique d'importance au Qu√©bec (`gg_hq`) et
3.  les r√©gions administratives (`gg_reg_qc`),
4.  les points et noms de villes s√©lectionn√©es (`gg_villes` et les √©tiquettes avec `geom_text_repel()`).

Notez encore une fois l'ordre des couches.

```{r ggplot_cartes_geom_simple}
# Faire le graphique 
gg_qc_db = gg_base +
  # Ajout de la classification √©cologique
  gg_cls_eco + 
  # Ajouter la GRHQ rogn√©e
  gg_hq + 
  # Ajout des r√©gions admin, par-dessus pour voir les bordures
  gg_reg_qc +
  # Ajouter le nom des villes 
  gg_villes + 
  # Ajouter les √©tiquettes du nom des villes 
  ggrepel::geom_text_repel(
    data = villes_qc_lst_flt, 
    # D√©finir les √©tiquettes et les coordonn√©es spatiales 
    mapping = aes(label = name, 
                  geometry = geometry),
    # Extraction des coordonn√©es spatiales pour dessiner les √©tiquettes
    stat = "sf_coordinates", 
    # Taille des √©tiquettes
    size = 3,
    # Ajout de tampon blanc pour les noms de villes 
    bg.color = "white",
    # √âtendue du tampon 
    bg.r = 0.15
  )
```

La carte s'affiche avec l'objet `gg_qc_db` puis en changeant des couleurs et la th√©matique de la carte. La l√©gende (voir `guide_legend()` dans `scale_fill_viridis_d()`) peut aussi √™tre en bas pour laisser plus de place √† notre carte.

```{r afficher_carte_ggplot_complet}
gg_qc_db + 
  # Change le remplissage pour la palette viridis 
  scale_fill_viridis_d(
    guide = guide_legend(
      title = 'Domaine biologique',
      title.position = "top",
      # L√©gende en bas
      position = 'bottom',
      # Nombre de rang√©es pour les √©tiquettes de la l√©gende 
      nrow = 4,
      # Orientation horizontale
      direction = 'horizontal'
    )
  ) +
  # Th√®me au minium 
  theme_void() +
  # Changer l'espacement entre les √©tiquettes de la l√©gende 
  theme(legend.key.spacing.y = unit(x = 0.015, units = "cm"))
```

### Couper pour le Qu√©bec m√©ridional

Le Qu√©bec est tellement beau et grand! Et justement, il est tellement grand qu'il serait judicieux de se concentrer sur la partie Sud, soit la plus peupl√©e. <!-- Apr√®s tout, nous nous int√©ressons aux endroits qui ont le plus d'observations. -->

Donc, nous allons extraire la partie plus au sud (m√©ridional) du Qu√©bec des couches spatiales. Cela est (selon l'Atlas des oiseaux nicheurs du Qu√©bec [-@robertDeuxiemeAtlasOiseaux2019]), le 50.5 degr√©s de latitude (c'est l'axe des Y, la longitude est l'axe des X).

Le CRS des domaines biologiques `st_crs(cls_eco)` est en `epsg:32198` ou *NAD83 / Quebec Lambert*. Il faut convertir 50.5 degr√©s en `epsg:32198`. Mais comment? Il y a des convertisseurs en ligne, mais nous pouvons le programmer!

Prenons les limites g√©ographiques du Qu√©bec, ce qu'on appelle la boite limite ou *bounding box* ('bbox') qui s'extrait avec `st_bbox()`. Notre strat√©gie sera d'aller chercher la boite limite en coordonn√©es du *World Geodetic System 1984 (WGS84)* ou `epsg:4326` qui sont en degr√©es d√©cimales.

```{r limites_geo_qc}
# Trouver les limites du Qu√©bec en WSG84
bbox_qc_wsg84 = cls_eco_simp |> 
  st_transform(crs = 4326) |> # Ici on transforme de 32198 vers 4326
  st_bbox()
```

Comparez les limites en *epsg:4326* vs *epsg:32198*.

```{r}
# Boite limite 'bounding box' en epsg:4326 (m√®tres)
bbox_qc_wsg84

# Extraire la boite limite 'bounding box' en epsg:32198 (m√®tres)
(bbox_qc = st_bbox(obj = cls_eco_simp))
```

Ensuite nous trouvons le centre entre la limite de latitude minimum et maximum, puis nous faisons un point au centre et au nord de la limite que nous souhaitons mettre.

```{r trouver_centre_qc}
# Trouver le centre entre xmin et xmax (ou l'√©tendue longitude du Qu√©bec en WSG84)
centre = mean(bbox_qc_wsg84[c('xmin','xmax')])
round(centre, 1) # environ -68.5
```

Puis, un point fictif est cr√©√© avec `st_point()` avec notre centre (longitude = -68.4, pr√®s du m√©ridien central EPSG:32198) et la limite nord (latitude = 50.5). Ce point est transform√© en *epsg:32198*

```{r convertir_pts_gps}
# Faire un point fictif au Qu√©bec
pts = st_point(x = c(centre, 50.5)) |> 
  # Mettre le CRS 
  st_sfc(crs = 4326) |> 
  # Transformer en epsg:32198
  st_transform(crs = projetCRS) |> 
  # Extraire les coordonn√©es seulement 
  st_coordinates()
```

<!-- # Avec terra (voir https://stackoverflow.com/questions/79737412/transformation-of-extent-in-data-is-not-recovered-when-transforming-back-to-the) -->

<!-- lulc.e <- ext(-830291.4, 783722.4, 117964.2, 2090650.1) -->

<!-- target_4326 <- vect(cbind(-69, 50.5), crs = "epsg:4326") -->

<!-- target_32198 <- project(target_4326, "epsg:32198") -->

<!-- new_ymax <- crds(target_32198)[2] -->

<!-- lulc_mer <- ext(lulc.e[1], lulc.e[2], lulc.e[3], new_ymax) -->

<!-- lulc_mer -->

La valeur `Y` de ce point fictif (cr√©√© en *epsg:4326* vers *epsg:32198*) remplacera le `ymax` de l'objet `bbox_qc`. Cette nouvelle boite limite servira √† rogner (`st_crop()`) la carte pour enlever tout ce qui se retrouve au-dessus du 50.5 latitude (ou `pts[2]` = `r formatC(pts[2], format = "f", big.mark = "", digits = 2)` m√®tres selon le `projetCRS`).

```{r boite_limite_meridional}
# Remplacer la valeur de la borne sup√©rieure 
bbox_qc[4] <- pts[2]
```

Nous sommes pr√™ts √† faire notre carte pour le Qu√©bec m√©ridional. Je rogne les couches `cls_eco` et `regqc` (sans simplification) pour avoir les donn√©es les plus propre possible pour la carte finale.

```{r decoupe_carte_qc}
# P√©paration des domaines bioclimatiques pour le Qu√©bec m√©ridional
cls_eco_meridional = cls_eco |> 
  st_transform(crs = projetCRS) |> 
  # boite gabarit pour rogner
  st_crop(y = bbox_qc)

# P√©paration/Rogner des r√©gions administratives pour le Qu√©bec m√©ridional
regqc_meridional = regqc |> 
  st_transform(crs = projetCRS) |> 
  # boite gabarit pour rogner
  st_crop(y = bbox_qc)
```

Puis on refait les couches pour mettre dans le graphique `ggplot2`.

```{r gg_cartes_meridional}
# Domaines biologiques rogn√©s
gg_cls_eco_merid = geom_sf(
  data = cls_eco_meridional,  
  mapping = aes(fill = NOM_DB), # couleur en fonction des domaines biologiques
  alpha = .9,                   # Transparence √† 90% 
  linewidth = 0                 # Pas de ligne, plus beau
)

# R√©gions agministratives rogn√©es 
gg_regqc_merid = geom_sf(
  data = regqc_meridional,  
  fill = NA,                    # Pas de remplissage
  colour = 'grey100',           # Couleur des lignes
  linewidth = 0.05              # Fine ligne
  
)
```

Finalement, on met tout ensemble pour obtenir notre carte du Qu√©bec m√©ridional.

```{r gg_carte_statique_sud_qc}
set.seed(12345)

# Faire le graphique 
gg_qc_db = gg_base +
  # Domaines biologiques rogn√©s
  gg_cls_eco_merid + 
  # Ajouter la GRHQ rogn√©e
  gg_hq + 
  # Ajout des r√©gions admin, par-dessus pour voir les bordures
  # R√©gions agministratives rogn√©es 
  gg_regqc_merid + 
  # Ajouter le nom des villes 
  gg_villes + 
  # Ajouter le texte du nom des villes 
  ggrepel::geom_text_repel(
    data = villes_qc_lst_flt, 
    mapping = aes(label = name, 
                  geometry = geometry),
    stat = "sf_coordinates", 
    size = 3,
    # Ajout de fond blanc pour les noms de villes 
    bg.color = "white",
    bg.r = 0.15
  ) +   
  # Change le remplissage pour la palette viridis 
  scale_fill_viridis_d(
    guide = guide_legend(
      title = 'Domaine biologique',
      title.position = "top",
      # L√©gende en bas
      position = 'bottom',
      # Nombre de rang√©es pour les √©tiquettes de la l√©gende 
      nrow = 4,
      # Orientation horizontale
      direction = 'horizontal'
    )
  ) +
  # Th√®me au minium 
  theme_void() +
  # Changer l'espacement entre les √©tiquettes de la l√©gende 
  theme(legend.key.spacing.y = unit(x = 0.015, units = "cm"))
```

Puis on admire notre r√©sultat :

```{r gg_afficher_la_superbe_carte}
gg_qc_db
```

Enfin! une carte qui a de la gueule. Maintenant, exportons la carte avec `ggsave()`.

```{r exportation_graphique}
# Exportation en PNG
ggsave(
  # Changer l'extension '.png' pour '.pdf' ou '.svg' au besoin. 
  filename = "output/partie_1/carte_domEco_Qc.png", 
  plot = gg_qc_db, 
  width = 6, 
  height = 6, 
  dpi = 300
)
```

## 2. Points chauds d'observations

### Carte : points chauds eBird

Notre carte de fond est pas mal, mais elle ne dit pas grand chose c√¥t√© biodiversit√©. Un des objectifs est de sites s√©duisants pour observer la biodiversit√©. Nous pourrions prendre les [points des sites publics eBird](https://ebird.org/hotspots) comme proxy [@eBirdHotspotsGeospatial2025]. S'il y a beaucoup d'oiseaux, c'est qu'il doit y avoir beaucoup de nourriture pour soutenir cette diversit√© et ainsi, augmenter nos chances de voir d'autres choses int√©ressantes.

Il est possible d'aller cherche ces points de sites publics eBird directement avec l'API de eBird. Le fichier `data/partie_1/biodiv/eBird_hotspots_CA_QC*.csv` a √©t√© obtenu suivant les explications sous la section '*Is there a list of all eBird Hotspots?*' au lien [eBird Hotspot FAQs](https://support.ebird.org/en/support/solutions/articles/48001009443-ebird-hotspot-faqs). Cela requiert une cl√© API de eBird (voir `VOTRECLEAPI` dans la commande plus bas). Le fichier `eBird regions and region codes_18Apr2023.xlsx` ([t√©l√©chargeable ici](https://support.ebird.org/helpdesk/attachments/48293281603) ) contient les codes r√©gionaux (come `CA-QC`) et permet de choisir la bonne zone √† t√©l√©charger directement. La commande 'terminal' (bash) suivante permet (avec quelques modifications expliqu√©es dans les liens ci-haut) d'obtenir le fichier `eBird_hotspots_CA_QC*.csv` √† jour.

```{bash, eval=FALSE}
# Prendre la date actuelle 
DATE_VAR=$(date -I)
# T√©l√©chargement du fichier des sites publics eBird avec la date de t√©l√©chargement
curl  --header 'X-eBirdApiToken: VOTRECLEAPI' \ 
--location -g 'https://api.ebird.org/v2/ref/hotspot/CA-QC?fmt=csv' > \
eBird_hotspots_CA_QC_${DATE_VAR}.csv
```

Puis, ce ficher `.csv` est import√© et le nom des colonnes ajout√©.

```{r preparation_donnees}
# Mettre les donn√©es des points chauds de eBird en m√©moire
pts_chauds_ebird = "data/partie_1/biodiv/eBird_hotspots_CA_QC_2025-10-13.csv"

# Mettre le fichier en m√©moire 
ebird_hp = read.csv(file = pts_chauds_ebird, 
                    header = FALSE)

# Ajouter un nom aux colonnes 
names(ebird_hp) <- c("locId", 
                     "countryCode", 
                     "subnational1Code", 
                     "subnational2Code", 
                     "lat", "lng",        # Donn√©es spatiales!
                     "locName",           # Nom des sites
                     "latestObsDt",       # Date de la derni√®re observation
                     "numSpeciesAllTime") # Nombre d'esp√®ces 
```

Ce fichier CSV contient de l'information spatiale (`lng`, `lat`). Les fonctions `st_as_sf` et `st_set_crs`, d√©finissent les donn√©es spatiales (POINT) du CSV import√©.

```{r pt_ebirds_sf}
# Pr√©parer les donn√©es spatiales pour une cartographie 
ebird_hp_prep = ebird_hp |>  
  # Mettre tableau en format spatial 
  st_as_sf(coords = c('lng', 'lat')) |> 
  # Choisir le CRS 
  st_set_crs(value = 4326) |>  
  # Formatter la colonne de date 
  mutate(
    date_obs_recent = as.POSIXct(
      latestObsDt,
      format="%Y-%m-%d %H:%M",
      tz = Sys.timezone()
    )
  ) |> 
  # Projection du jeu de donn√©es selon le CRS du projet 
  st_transform(crs = projetCRS) 
```

Pour la cartographie, une nouvelle colonne avec le nom des sites et le nombre d'esp√®ces est ajout√©es une √©tiquette plus tard. <!-- '<br>' ajoute un retour de ligne  -->

```{r etiquette_ebird_sites_especes}
ebird_hp_sf = ebird_hp_prep |> 
  # Nouvelle colonne d'√©tiquette 
  dplyr::mutate(
    labs = sprintf(
      # Joindre le nom d'un point eBird et le nombre d'esp√®ces.
      fmt = "%s ‚Äî %s esp√®ces", 
      locName, numSpeciesAllTime)
  )
```

Une petite exploration des donn√©es montre qu'avec un filtre des sites dont la derni√®re visite est apr√®s 2020 et ayant beaucoup d'esp√®ces (150 et +). Le le chiffre de 150 esp√®ces pourrait aussi √™tre choisi en fonction d'un certain quantile. Avec une probabilit√© de 0.85, on obtient : `r`quantile(ebird_hp_sf\$numSpeciesAllTime, probs = 0.85, na.rm = TRUE)\`.

```{r exploration_donnees}
ebird_hp_sf |> 
  # Application du filtrer 
  filter(numSpeciesAllTime >= 150,           # Nombre d'esp√®ces
         date_obs_recent >= '2020-01-01') |> # Date 
  nrow()
```

<!-- Les quantiles donne une id√©e de la distribution des valeurs dans les donn√©es.  -->

<!-- ```{r oiseaux_quantiles} -->

<!-- (quant = summary(ebird_hp_sf$numSpeciesAllTime)) -->

<!-- ``` -->

On peut voir que des sites n'ont pas √©t√© visit√©s depuis longtemps avec la carte ci-dessous (notez que si vous lisez cela longtemps dans le futur, les donn√©es seront diff√©rentes)! Cela pourrait √™tre int√©ressant d'aller visiter ces sites et d'ajouter des observations ü¶Ö.

```{r exploration_points_visites_ancien}
# 20 sites avec vieilles dates de visites (pas de liste eBird depuis ce temps!)
sites_perdus = ebird_hp_sf |> 
  # √âtiquette avec l'ann√©e d'observation
  dplyr::mutate(yr_last = substr(latestObsDt, 0,4), 
                labs = sprintf(fmt = "%s ‚Äî %s", yr_last, labs)) |> 
  # Montre les 20 premiers avec les dates les plus petites
  slice_min(order_by = date_obs_recent, 
            n = 20)

# Faire une carte 
mapview(x = sites_perdus, 
        zcol = "yr_last", 
        layer.name = 'Nb Esp.',
        label = "labs")
```

Le code plus bas montre la carte avec tous les points. Cela fait beaucoup de points! Je vous laisse explorer.

```{r exploration_donnees_carte_tous, eval=intermap_slow}
ebird_hp_sf_simple = ebird_hp_sf |> 
  # S√©lection de colonnes pour l'affichage de d√©tail dans la carte 
  dplyr::select(locId, latestObsDt, numSpeciesAllTime, labs) 

# Regarder les points chauds d'observations eBird 
mapview(
  x = ebird_hp_sf_simple, 
  # Ajout de la couleur en fonction du nombre d'esp√®ces vues
  zcol = 'numSpeciesAllTime',  
  label = "labs",
  layer.name = 'Nb Esp.')
```

On peut aussi r√©pondre √† des questions de coin de table : o√π sont les sites avec plus de 250 esp√®ces diff√©rentes? Promenez le curseur sur les points pour voir plus de d√©tails sur les sites.

```{r ebird_carte_filtre, eval=TRUE}
ebird_hp_chaud = ebird_hp_sf |> 
  dplyr::filter(numSpeciesAllTime >= 250) |> 
  # S√©lection de colonnes pour l'affichage de d√©tail dans la carte 
  dplyr::select(locId, latestObsDt, numSpeciesAllTime, labs)

# Faire la carte 
mapview(
  x = ebird_hp_chaud, 
  zcol = "numSpeciesAllTime", 
  label = "labs",
  labelOptions = leaflet::labelOptions(noHide = FALSE,
                                       opacity = .85, 
                                       textOnly = FALSE),
  layer.name = 'Nb Esp.<br> filtre(>=250)')
```

Les points des sites avec ce dernier filtre tombe pas mal juste des parcs bien visit√©s et pr√®s des habitations. Aussi, la totalit√© se retrouve pr√®s de cours d'eau, marais, r√©servoirs ou un milieu humide. Ce qui pointe d√©montre une fois de plus l'importance des milieux humides pour la biodiversit√©.

Regardons o√π sont les sites avec plus de 150 observations, peu importe la derni√®re date de visite.

```{r exploration_donnees_carte_filtre_nb, eval=TRUE}
ebird_hp_sf_chaud_bio = ebird_hp_sf |> 
  # S√©lection de colonnes pour l'affichage de d√©tail dans la carte 
  dplyr::select(locId, latestObsDt, numSpeciesAllTime, labs) |> 
  # Regarder seulement les sites qui ont plus de 150 esp√®ces 
  filter(numSpeciesAllTime >= 150)

mapview(
  x = ebird_hp_sf_chaud_bio, 
  zcol = 'numSpeciesAllTime', 
  label = "labs",
  layer.name = 'Nb Esp.<br> filtre(>=150)')
```

Les sites avec le plus d'esp√®ces sont plus au sud. Deux explications rapides :

1.  il y a plus de monde au sud du Qu√©bec qui note des observations √† diff√©rents moments dans l'ann√©e, ce qui augmente l'effort d'√©chantillonnage (et donc la probabilit√© de trouver des esp√®ces plus rares).
2.  la diversit√© des oiseaux change en fonction de la latitude. Donc, plus les points se retrouvent dans le nord, moins d'esp√®ces devraient se retrouver. Nous pourrions regarder cela avec un mod√®le lin√©aire. Restons sur les objectifs de notre projet.

Pour avancer √† la prochaine √©tape, il pourrait √™tre int√©ressant de garder les sites avec le plus d'observations pour une MRC (disons environ une vingtaine).

### Points chauds eBird pour une seule r√©gion

Nous avons un probl√®me : aucun point eBird n'est associ√© avec les MRC des r√©gions administratives. Par contre, il est possible de faire une jointure spatiale en utilisant les sites eBirds et les r√©gions du Qu√©bec avec la fonction `st_join()`.

```{r joindre_ebird_pts_admin}
# Joindre les informations de MRC pour chaque point d'observation eBird
eb_qc = ebird_hp_sf |>  
  st_join(y = regqc_t)
```

Nous pouvons exporter ces donn√©es pour les mettre dans un logiciel GIS (comme QGIS), ou int√©grer ces donn√©es √† une base de donn√©es qui pourrait afficher les donn√©es pour chaque MRC. Ces donn√©es pourraient servir √† une application Shiny.

```{r exportation_ebird_reg_gpkg}
# Exportation des donn√©es en g√©opackage 
st_write(
  obj = eb_qc, 
  dsn = "output/partie_1/site_pub_ebird_MRC.gpkg", 
  delete_dsn = TRUE,
  quiet = TRUE
)
```

Voici une image montrant les sites eBird avec les MRC dans QGIS en utilisant quelques r√®gles de format d'√©tiquettes pour afficher les sites :

![](images/QGIS_exemple_sites_eBird.png){fig-alt="Sites eBird avec MRC" fig-align="center"}

Pour ce projet, nous allons extraire que les 20 sites avec le plus d'esp√®ces d'oiseaux.

```{r topN_ebird_pts_admin}
# Donne le top n des sites en fonction du nombre d'esp√®ces vues
eb_qc_topn = eb_qc |>  
  # Groupe par MRC pour faire le sommaire (filtration) 
  group_by(MRS_NM_MRC) |> 
  # Extraire 20 points avec le plus d'esp√®ces d'oiseaux par MRC 
  slice_max(n = 20, 
            order_by = numSpeciesAllTime)
```

Puis afficher le r√©sultat pour tout le Qu√©bec sur notre carte interactive.

```{r carte_points_ebird_admin_qc, eval=intermap_slow}
mapview(regqc_t, 
        legend = FALSE, 
        zcol = 'MRS_NM_MRC') + 
  mapview(eb_qc_topn,
          legend = FALSE, 
          cex = 'numSpeciesAllTime',
          zcol = 'MRS_NM_MRC', 
          label = 'locName') 
```

#### Ajout des sites eBird sur la carte de base

√Ä titre d'exemple, nous allons afficher seulement les sites eBirds qui se retrouve dans l'emprise de Montr√©al et Laval. En utilisant les donn√©es de r√©gions administratives, on peut filtrer et faire un boite limite avec seulement les r√©gions voulues.

```{r grhq_mtl_laval}
# Extraire l'emprise spatiale autour de Montr√©al et Laval 
emprise_region_villes = regqc_t |> 
  filter(MRS_NM_MRC %in% c("Montr√©al", 'Laval')) |> 
  st_bbox()
```

Il faut ensuite rogner les cartes avec

```{r prepare_couches_carte}

# Rogner l'information hydrologique pour cette r√©gion 
hq_lvl_mtl = hq_filt_qc |> st_crop(y = emprise_region_villes)
reg_mtl = regqc_t |> st_crop(y = emprise_region_villes)

# Prendre les 20 points les plus √©lev√©s en nombre d'esp√®ces pour Montr√©al et Laval 
eb_qc_topn_lvl_mtl = eb_qc_topn |> 
  filter(MRS_NM_MRC %in% c("Montr√©al", 'Laval')) 
```

√Ä noter que si on regarde de tr√®s pr√®s la r√©gion de Montr√©al et Laval, la classification des domaines √©cologiques est assez uniforme. Donc pas besoin de l'ajouter √† notre carte.

Bonus : Pour se rendre √† ces sites, on pourrait y aller en v√©lo? J'utiliserai donc les fichiers spatiaux du [r√©seau cyclable de Montr√©al (DQC)](https://www.donneesquebec.ca/recherche/dataset/vmtl-pistes-cyclables) [@MTLReseauCyclableJeu2013] et les [pistes cyclables et pi√©tonni√®res de Laval (DQC)](https://www.donneesquebec.ca/recherche/dataset/pistes-cyclables-et-pietonnieres) [@villedelavalPistesCyclablesPietonnieres12017]. Cela d√©montre aussi que m√™me les GeoJSON peuvent √™tre import√©s avec sf.

```{r reseau_cyclable_spatial_mtl_lvl}
# Chemin d'acc√®s aux fichiers de r√©seaux cyclables
res_cycl = "data/partie_1/infrastructure/res_cyclable"
lien_res_cycl_mtl = file.path(res_cycl, 'reseau_cyclable.geojson')
lien_res_cycl_lvl = file.path(res_cycl, 'pistes-cyclables-et-pietonnieres.geojson')

res_cyclable_mtl = st_read(dsn = lien_res_cycl_mtl, quiet = TRUE)
res_cyclable_lvl = st_read(dsn = lien_res_cycl_lvl, quiet = TRUE)
```

Il ne reste plus qu'√† faire notre carte!

```{r carte_mtl_laval}
set.seed(123456)
gg_carte_points_inret_ebird = ggplot() + 
  # Polygones des MRCs 
  geom_sf(data = reg_mtl) + 
  # Polygones d'eau
  geom_sf(data = hq_lvl_mtl, fill = 'lightblue') + 
  # Lignes du R√©seau cyclable
  geom_sf(data = res_cyclable_mtl, colour = "#A1D998", alpha = .5) + 
  geom_sf(data = res_cyclable_lvl, colour = "#A1D998", alpha = .5) + 
  # Top Points eBirds
  geom_sf(data = eb_qc_topn_lvl_mtl, 
          aes(size = numSpeciesAllTime, 
              shape = MRS_NM_MRC,
              colour = numSpeciesAllTime)) +
  # Texte nom de villes 
  ggrepel::geom_text_repel(data = eb_qc_topn_lvl_mtl, 
                           mapping = aes(label = labs, 
                                         geometry = geometry),
                           stat = "sf_coordinates", 
                           size = 2.25,
                           # Ajout de fond blanc pour les noms de villes 
                           bg.color = "white",
                           bg.r = 0.15) +
  # Couleur des points
  scale_colour_viridis_c() +
  # Th√®me minimal 
  theme_void() +
  # Ajout de titre aux l√©gendes
  labs(colour = "Nb esp√®ces", 
       size = "Nb esp√®ces",
       shape = "MRC")
```

Puis, on l'affiche.

```{r gg_carte_affiche_sites_ebirds_et_villes}
gg_carte_points_inret_ebird
```

## Prochaines √©tapes

Cette premi√®re partie avait pour but de faire un grand tour dans les fonctions utiles pour faire des analyses spatiales. Ainsi, il est possible d'importer et de manipuler les couches spatiales dans R et de pr√©parer des couches pour en faire des cartes. Vous pouvez toujours exporter les couches et continuer dans votre logiciel GIS pr√©f√©r√© apr√®s.

Avec ces nouvelles connaissances, il sera plus facile de manipuler les donn√©es de biodiversit√© provenant de GBIF.

### R√©f√©rences

::: {#refs}
:::
